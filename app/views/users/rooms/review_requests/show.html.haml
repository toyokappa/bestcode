.padding
  .box
    .box-header.navbar
      %h2.flex
        = link_to users_room_path(@room), class: 'mr-2 align-middle text-primary' do
          %i.fa.fa-chevron-left
        %span.align-middle= @review_req.name
      %span.avatar.w-32.flex-row.order-lg-2
        = image_tag @review_req.reviewee.check_and_return_image(:thumb)
    .box-divider.m-0
    .box-body
      .mb-3
        .badge.text-sm{ class: @review_req.is_open ? "success" : "danger" }
          %i.fa{ class: @review_req.is_open ? "fa-square-o" : "fa-check-square-o" }
          = @review_req.is_open ? "オープン" : "クローズ"
        .badge.text-sm{ class: @review_req.state_color }= @review_req.state_text
      .markdown-body.no-border= markdown @review_req.description
  .streamline.ml-2
    - @review_comments.each do |comment|
      .sl-item
        .sl-left= image_tag comment.user.check_and_return_image(:thumb), class: "circle"
        .sl-content
          .mb-1
            .sl-date.text-muted= comment.created_at.strftime("%Y-%m-%d %H:%M")
            %b.sl-author= comment.user.name
            %span さんが
            .badge.text-sm.mr-0{ class: comment.state_color }
              %span= comment.state_text
            %span.align-middle をしました
          - if comment.body.present?
            .box.mb-1
              .box-body
                .markdown-body.no-border= markdown comment.body
    .sl-item
      .sl-left= image_tag current_user.check_and_return_image(:thumb), class: "circle"
      .sl-content
        .box.m-0
          = form_for @review_comment, url: users_rooms_review_comments_path do |f|
            = f.hidden_field :review_request_id, value: @review_req.id
            - error_for_col = f.object.errors.full_messages_for(:content)
            = f.text_area :body, rows: 5, placeholder: "コメントを入力...", class: "form-control no-border #{'is-invalid' if error_for_col.present?}"
            - error_for_col.each do |message|
              %p.text-danger.filled.text-sm.mt-1= message
            .box-divider.m-0
            .box-footer.clearfix
              = f.submit "コメントする", class: "btn btn-sm primary float-right"
              %ul.nav.nav-sm.nav-pills
                - ReviewComment.selectable_state(current_user, @room, @review_req).each do |text, val|
                  %li.nav-item
                    %label.md-ckeck.mr-2.mb-0.pl-0.nav-link
                      = f.radio_button :state, val
                      %i.primary.mr-1
                      = text
